[{"C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\index.js":"1","C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\App.js":"2","C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\screens\\Welcome\\index.js":"4","C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\screens\\result\\index.js":"5","C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\components\\Button.js":"6"},{"size":146,"mtime":1617810982000,"results":"7","hashOfConfig":"8"},{"size":562,"mtime":1617905916931,"results":"9","hashOfConfig":"8"},{"size":1776,"mtime":1617895439000,"results":"10","hashOfConfig":"8"},{"size":11540,"mtime":1617908067993,"results":"11","hashOfConfig":"8"},{"size":548,"mtime":1617906248690,"results":"12","hashOfConfig":"8"},{"size":939,"mtime":1613560330000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"61brds",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\index.js",[],"C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\App.js",[],"C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\components\\Navbar.js",["30","31"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"./Button\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"resize\", showButton);\r\n  return (\r\n    <>\r\n      <nav classname=\"navbar\">\r\n        <div className=\"navbar-container\">\r\n          <Link to=\"/\" className=\"navbar-logo\">\r\n            <span>Covid-19 Early Assestment &nbsp;&nbsp;</span>\r\n            <i class=\"fas fa-shield-virus\"></i>\r\n          </Link>\r\n          <div className=\"menu-icon\" onClick={handleClick}>\r\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n          </div>\r\n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/covid\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Covid-19\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                to=\"/selftool\"\r\n                className=\"nav-links\"\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Self Assestment\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\screens\\Welcome\\index.js",["32","33","34"],"import \"./form.css\";\r\nimport React, { useState } from \"react\";\r\nimport cover from \"../../assets/cover1.jpg\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\n\r\nexport default function ({history}) {\r\n  const [open, setOpen] = useState(false);\r\n  const [index, setIndex] = useState(1);\r\n  if (open) {\r\n    return (\r\n      <div className=\"formContainer\">\r\n        <Modal\r\n          show={open}\r\n          onHide={() => setOpen(false)}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Body>\r\n            {index === 1 && (\r\n              <div className=\"modaldiv\">\r\n                <h4>Select Your Gender</h4>\r\n                <div className=\"modaldivRow\">\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Male\r\n                  </button>\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Female\r\n                  </button>\r\n                </div>\r\n                <div className=\"modalFootRow\">\r\n                  <button\r\n                    className=\"footerButton\"\r\n                    onClick={() => setOpen(false)}\r\n                  >\r\n                    Back\r\n                  </button>\r\n                  <button\r\n                    className=\"footerButton\"\r\n                    onClick={() => setIndex(index + 1)}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                <div className=\"modalFooterRow\">\r\n                  <span className=\"modalFooterspanActive\">1</span>\r\n                  <span className=\"modalFooterspan\">2</span>\r\n                  <span className=\"modalFooterspan\">3</span>\r\n                  <span className=\"modalFooterspan\">4</span>\r\n                  <span className=\"modalFooterspan\">5</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {index === 2 && (\r\n              <div className=\"modaldiv\">\r\n                <h4>What is your day of birth?</h4>\r\n                <div className=\"modaldivRow\">\r\n                  <input type=\"date\" className=\"inputDate\" />\r\n                </div>\r\n                <div className=\"modalFootRow\">\r\n                  <button\r\n                    className=\"footerButton\"\r\n                    onClick={() => setIndex(index - 1)}\r\n                  >\r\n                    Back\r\n                  </button>\r\n                  <button\r\n                    className=\"footerButton\"\r\n                    onClick={() => setIndex(index + 1)}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                <div className=\"modalFooterRow\">\r\n                  <span className=\"modalFooterspan\">1</span>\r\n                  <span className=\"modalFooterspanActive\">2</span>\r\n                  <span className=\"modalFooterspan\">3</span>\r\n                  <span className=\"modalFooterspan\">4</span>\r\n                  <span className=\"modalFooterspan\">5</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {index === 3 && (\r\n              <div className=\"modaldiv\">\r\n                <h4>Do you smoke?</h4>\r\n                <div className=\"modaldivRow\">\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Yes\r\n                  </button>\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    No\r\n                  </button>\r\n                </div>\r\n                <div className=\"modalFootRow\">\r\n                  <button\r\n                    className=\"footerButton\"\r\n                    onClick={() => setIndex(index - 1)}\r\n                  >\r\n                    Back\r\n                  </button>\r\n                  <button\r\n                    className=\"footerButton\"\r\n                    onClick={() => setIndex(index + 1)}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                <div className=\"modalFooterRow\">\r\n                  <span className=\"modalFooterspan\">1</span>\r\n                  <span className=\"modalFooterspan\">2</span>\r\n                  <span className=\"modalFooterspanActive\">3</span>\r\n                  <span className=\"modalFooterspan\">4</span>\r\n                  <span className=\"modalFooterspan\">5</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {index === 4 && (\r\n              <div className=\"modaldiv\">\r\n                <h4>Do you have any of these sysmptoms:(Select all that apply)</h4>\r\n                <div className=\"modaldivRow\">\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Fever\r\n                  </button>\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Sore throat\r\n                  </button>\r\n                </div>\r\n                <div className=\"modaldivRow\">\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Cough\r\n                  </button>\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Pneumonia\r\n                  </button>\r\n                </div>\r\n                <div className=\"modaldivRow\">\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Breathing difficulty\r\n                  </button>\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Headache\r\n                  </button>\r\n                </div>\r\n                <div className=\"modaldivRow\">\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Myalgia\r\n                  </button>\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Fatigue\r\n                  </button>\r\n                </div>\r\n                <div className=\"modalFootRow\">\r\n                  <button\r\n                    className=\"footerButton\"\r\n                    onClick={() => setIndex(index - 1)}\r\n                  >\r\n                    Back\r\n                  </button>\r\n                  <button\r\n                    className=\"footerButton\"\r\n                    onClick={() => setIndex(index + 1)}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                <div className=\"modalFooterRow\">\r\n                  <span className=\"modalFooterspan\">1</span>\r\n                  <span className=\"modalFooterspan\">2</span>\r\n                  <span className=\"modalFooterspan\">3</span>\r\n                  <span className=\"modalFooterspanActive\">4</span>\r\n                  <span className=\"modalFooterspan\">5</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {index === 5 && (\r\n              <div className=\"modaldiv\">\r\n                <h4>Have you ever had or been diagnosed to have:(Select all that apply)</h4>\r\n                <div className=\"modaldivRow\">\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Diabetes\r\n                  </button>\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Hypertension\r\n                  </button>\r\n                </div>\r\n                <div className=\"modaldivRow\">\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Kidney failue\r\n                  </button>\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Asthma\r\n                  </button>\r\n                </div>\r\n                <div className=\"modaldivRow\">\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Cardiovascular\r\n                  </button>\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Obesity\r\n                  </button>\r\n                </div>\r\n                <div className=\"modaldivRow\">\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Immunosuppression\r\n                  </button>\r\n                  <button className=\"modalDivButton\">\r\n                    <Form.Check type=\"checkbox\" />\r\n                    Chronic obstructive pulmonary\r\n                  </button>\r\n                </div>\r\n                <div className=\"modalFootRow\">\r\n                  <button\r\n                    className=\"footerButton\"\r\n                    onClick={() => setIndex(index - 1)}\r\n                  >\r\n                    Back\r\n                  </button>\r\n                  <button\r\n                    className=\"footerButton\"\r\n                    onClick={() => history.push(\"/result\")}\r\n                  >\r\n                    Finish\r\n                  </button>\r\n                </div>\r\n                <div className=\"modalFooterRow\">\r\n                  <span className=\"modalFooterspan\">1</span>\r\n                  <span className=\"modalFooterspan\">2</span>\r\n                  <span className=\"modalFooterspan\">3</span>\r\n                  <span className=\"modalFooterspan\">4</span>\r\n                  <span className=\"modalFooterspanActive\">5</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Modal.Body>\r\n        </Modal>\r\n        <img src={cover} className=\"cover1\" />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"formContainer\">\r\n        <div className=\"formmm\">\r\n          <h3 className=\"formHeading\">Welcome</h3>\r\n          <p>\r\n            This tool aims to pre-screen concerned users so they can make an\r\n            informed decision on whether to get tested.\r\n          </p>\r\n          <p>\r\n            This tool uses a model based on assorted medical and population data\r\n            of coronavirus patients in the U.S. collected by various organizations.\r\n            It estimates the probability of infection based on location and reported\r\n            symptoms.\r\n          </p>\r\n          <p>\r\n            This tool is not meant to take the place of consultation with your health\r\n            care provider, to diagnose, or to treat conditions. If you're in an emergency\r\n            medical situation, call 911 or your local emergency number.\r\n          </p>\r\n          <button className=\"formButton\" onClick={() => setOpen(true)}>\r\n            BEGIN\r\n          </button>\r\n        </div>\r\n        <div className=\"formButtonView\">\r\n          <button className=\"sideButton\">Covid-19</button>\r\n          <br />\r\n          <br />\r\n          <button className=\"sideButton\">Statistics</button>\r\n          <br />\r\n          <br />\r\n          <button className=\"sideButton\">QA</button>\r\n        </div>\r\n        <img src={cover} className=\"cover1\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\screens\\result\\index.js",["35","36","37","38","39"],"import React, { useState } from \"react\";\r\nimport cover from \"../../assets/cover1.jpg\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\n\r\nexport default function ({history}) {\r\n  return (\r\n    <div className=\"formContainer\">\r\n      <div className=\"formButtonView\">\r\n        <h1 style={{marginLeft:\"2.5em\", color: \"white\"}}>Completed</h1>\r\n        <br />\r\n        <br />\r\n        <button className=\"sideButton\" onClick={() => history.push(\"/\")}>Back To Home</button>\r\n      </div>\r\n      <img src={cover} className=\"cover1\" />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Checkout\\Documents\\Projects\\Coronavirus-Diagnosis-ML\\client\\src\\components\\Button.js",["40","41","42"],"import React from 'react';\r\nimport './Button.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst STYLES  = ['btn--primary','btn--outline'];\r\n\r\nconst SIZES = ['btn--medium','btn--large'];\r\n\r\nexport const Button = ({\r\n    children, \r\n    type, \r\n    onClick,\r\n    buttonStyle\r\n    ,buttonSize\r\n})=> {\r\n                        const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\r\n                        const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n                        return (\r\n\r\n                            <Link to='sign-up' className = 'btn-mobile'>\r\n                                <button className={'btn ${checkButtonStyle}, ${checkButtonSize}'} onClick = {onClick} type = {type}>\r\n\r\n                                    {children}\r\n                                </button>\r\n\r\n\r\n                            </Link>\r\n                        )\r\n                    };\r\n",{"ruleId":"43","severity":1,"message":"44","line":3,"column":10,"nodeType":"45","messageId":"46","endLine":3,"endColumn":16},{"ruleId":"43","severity":1,"message":"47","line":8,"column":10,"nodeType":"45","messageId":"46","endLine":8,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":6,"column":1,"nodeType":"50","endLine":295,"endColumn":2},{"ruleId":"51","severity":1,"message":"52","line":255,"column":9,"nodeType":"53","endLine":255,"endColumn":47},{"ruleId":"51","severity":1,"message":"52","line":291,"column":9,"nodeType":"53","endLine":291,"endColumn":47},{"ruleId":"43","severity":1,"message":"54","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"55","line":3,"column":10,"nodeType":"45","messageId":"46","endLine":3,"endColumn":14},{"ruleId":"43","severity":1,"message":"56","line":3,"column":16,"nodeType":"45","messageId":"46","endLine":3,"endColumn":21},{"ruleId":"48","severity":1,"message":"49","line":5,"column":1,"nodeType":"50","endLine":17,"endColumn":2},{"ruleId":"51","severity":1,"message":"52","line":14,"column":7,"nodeType":"53","endLine":14,"endColumn":45},{"ruleId":"43","severity":1,"message":"57","line":16,"column":31,"nodeType":"45","messageId":"46","endLine":16,"endColumn":47},{"ruleId":"43","severity":1,"message":"58","line":17,"column":31,"nodeType":"45","messageId":"46","endLine":17,"endColumn":46},{"ruleId":"59","severity":1,"message":"60","line":22,"column":52,"nodeType":"61","messageId":"62","endLine":22,"endColumn":97},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'button' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'checkButtonStyle' is assigned a value but never used.","'checkButtonSize' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression"]